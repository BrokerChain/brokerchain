// auto generated by dev/system
import express from "express";
import { Logger } from "../../../myutils/logger.js";

export function attach_rpc_handler_unsafe(plog: Logger, opt: { exp_app: express.Express }) {
    const log = plog.sub("server.attach_rpc_handler_unsafe");
    const { exp_app } = opt;
    // unsafe!
    exp_app.post("/library/:lib_name/:fun_name", (req, res) => {
        const { lib_name, fun_name } = req.params;
        const req_log = log.sub(`post-unsafe.library.${lib_name}.${fun_name}`);
        req_log.variable("params", req.params);
        const input = req.body;
        req_log.variable("input", input);
        import(`../../${lib_name}/${fun_name}/rpc/handle.js`)
            .then((mod) => {
                const fun_code_name = fun_name.replace(/-/g, "_");
                const target_export_fun_name = `handle_rpc_${fun_code_name}`;
                const fun = mod[target_export_fun_name];
                if (typeof fun !== "function") {
                    const err = req_log.new_error(`function is not exported: ${target_export_fun_name}, but got: ${Object.keys(mod)}`);
                    res.status(404);
                    res.end(err.message);
                    return;
                }

                fun(req_log, input, {
                    invalid_input: (err: any) => {
                        // bad request
                        req_log.error(err);
                        res.status(400);
                        res.end(err.message);
                    },
                    ok: (result: any) => {
                        // include normal fail case
                        req_log.variable("result", result);
                        req_log.ok();
                        res.json(result);
                    },
                    fail: (err: any) => {
                        // internal error (not normal fail)
                        req_log.error(err);
                        res.status(500);
                        res.end(err.message);
                    }
                });
            })
            .catch((err) => {
                req_log.error(err);
                res.status(404);
                res.end(`module not found: ${lib_name}/${fun_name}`);
            });
    });
}
