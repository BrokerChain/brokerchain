// auto generated by dev/system
import express from "express";
import { Logger } from "../../../myutils/logger.js";
import { handle_rpc_export_zip_file } from "../export-zip-file/rpc/handle.js";
import { handle_rpc_disk_collection_ls } from "../disk-collection-ls/rpc/handle.js";
import { handle_rpc_disk_collection_load } from "../disk-collection-load/rpc/handle.js";
import { handle_rpc_disk_collection_save } from "../disk-collection-save/rpc/handle.js";
import { handle_rpc_disk_collection_item_get } from "../disk-collection-item-get/rpc/handle.js";
import { handle_rpc_disk_collection_item_add } from "../disk-collection-item-add/rpc/handle.js";
import { handle_rpc_disk_collection_item_del } from "../disk-collection-item-del/rpc/handle.js";
import { handle_rpc_disk_collection_dirname_resolve } from "../disk-collection-dirname-resolve/rpc/handle.js";
import { handle_rpc_cache_collection_get } from "../cache-collection-get/rpc/handle.js";
import { handle_rpc_cache_collection_set } from "../cache-collection-set/rpc/handle.js";
import { handle_rpc_queue_collection_all_load } from "../queue-collection-all-load/rpc/handle.js";
import { handle_rpc_queue_collection_load } from "../queue-collection-load/rpc/handle.js";
import { handle_rpc_queue_collection_save } from "../queue-collection-save/rpc/handle.js";
import { handle_rpc_collection_get } from "../collection-get/rpc/handle.js";
import { handle_rpc_collection_get_one } from "../collection-get-one/rpc/handle.js";
import { handle_rpc_collection_item_add } from "../collection-item-add/rpc/handle.js";
import { handle_rpc_collection_item_del } from "../collection-item-del/rpc/handle.js";

export function attach_rpc_handler(plog: Logger, opt: { exp_app: express.Express }) {
    const log = plog.sub("server.attach_rpc_handler");
    const { exp_app } = opt;

    exp_app.post("/library/storage-simple-coll/export-zip-file", (req, res) => {
        const input = req.body;
        const req_log = log.sub("post.library.storage-simple-coll.export-zip-file");
        handle_rpc_export_zip_file(req_log, input, {
            invalid_input: (err) => {
                // bad request
                req_log.error(err);
                res.status(400);
                res.end(err.message);
            },
            ok: (result) => {
                // include normal fail case
                req_log.variable("result", result);
                req_log.ok();
                res.json(result);
            },
            fail: (err) => {
                // internal error (not normal fail)
                req_log.error(err);
                res.status(500);
                res.end(err.message);
            }
        });
    });

    exp_app.post("/library/storage-simple-coll/disk-collection-ls", (req, res) => {
        const input = req.body;
        const req_log = log.sub("post.library.storage-simple-coll.disk-collection-ls");
        handle_rpc_disk_collection_ls(req_log, input, {
            invalid_input: (err) => {
                // bad request
                req_log.error(err);
                res.status(400);
                res.end(err.message);
            },
            ok: (result) => {
                // include normal fail case
                req_log.variable("result", result);
                req_log.ok();
                res.json(result);
            },
            fail: (err) => {
                // internal error (not normal fail)
                req_log.error(err);
                res.status(500);
                res.end(err.message);
            }
        });
    });

    exp_app.post("/library/storage-simple-coll/disk-collection-load", (req, res) => {
        const input = req.body;
        const req_log = log.sub("post.library.storage-simple-coll.disk-collection-load");
        handle_rpc_disk_collection_load(req_log, input, {
            invalid_input: (err) => {
                // bad request
                req_log.error(err);
                res.status(400);
                res.end(err.message);
            },
            ok: (result) => {
                // include normal fail case
                req_log.variable("result", result);
                req_log.ok();
                res.json(result);
            },
            fail: (err) => {
                // internal error (not normal fail)
                req_log.error(err);
                res.status(500);
                res.end(err.message);
            }
        });
    });

    exp_app.post("/library/storage-simple-coll/disk-collection-save", (req, res) => {
        const input = req.body;
        const req_log = log.sub("post.library.storage-simple-coll.disk-collection-save");
        handle_rpc_disk_collection_save(req_log, input, {
            invalid_input: (err) => {
                // bad request
                req_log.error(err);
                res.status(400);
                res.end(err.message);
            },
            ok: (result) => {
                // include normal fail case
                req_log.variable("result", result);
                req_log.ok();
                res.json(result);
            },
            fail: (err) => {
                // internal error (not normal fail)
                req_log.error(err);
                res.status(500);
                res.end(err.message);
            }
        });
    });

    exp_app.post("/library/storage-simple-coll/disk-collection-item-get", (req, res) => {
        const input = req.body;
        const req_log = log.sub("post.library.storage-simple-coll.disk-collection-item-get");
        handle_rpc_disk_collection_item_get(req_log, input, {
            invalid_input: (err) => {
                // bad request
                req_log.error(err);
                res.status(400);
                res.end(err.message);
            },
            ok: (result) => {
                // include normal fail case
                req_log.variable("result", result);
                req_log.ok();
                res.json(result);
            },
            fail: (err) => {
                // internal error (not normal fail)
                req_log.error(err);
                res.status(500);
                res.end(err.message);
            }
        });
    });

    exp_app.post("/library/storage-simple-coll/disk-collection-item-add", (req, res) => {
        const input = req.body;
        const req_log = log.sub("post.library.storage-simple-coll.disk-collection-item-add");
        handle_rpc_disk_collection_item_add(req_log, input, {
            invalid_input: (err) => {
                // bad request
                req_log.error(err);
                res.status(400);
                res.end(err.message);
            },
            ok: (result) => {
                // include normal fail case
                req_log.variable("result", result);
                req_log.ok();
                res.json(result);
            },
            fail: (err) => {
                // internal error (not normal fail)
                req_log.error(err);
                res.status(500);
                res.end(err.message);
            }
        });
    });

    exp_app.post("/library/storage-simple-coll/disk-collection-item-del", (req, res) => {
        const input = req.body;
        const req_log = log.sub("post.library.storage-simple-coll.disk-collection-item-del");
        handle_rpc_disk_collection_item_del(req_log, input, {
            invalid_input: (err) => {
                // bad request
                req_log.error(err);
                res.status(400);
                res.end(err.message);
            },
            ok: (result) => {
                // include normal fail case
                req_log.variable("result", result);
                req_log.ok();
                res.json(result);
            },
            fail: (err) => {
                // internal error (not normal fail)
                req_log.error(err);
                res.status(500);
                res.end(err.message);
            }
        });
    });

    exp_app.post("/library/storage-simple-coll/disk-collection-dirname-resolve", (req, res) => {
        const input = req.body;
        const req_log = log.sub("post.library.storage-simple-coll.disk-collection-dirname-resolve");
        handle_rpc_disk_collection_dirname_resolve(req_log, input, {
            invalid_input: (err) => {
                // bad request
                req_log.error(err);
                res.status(400);
                res.end(err.message);
            },
            ok: (result) => {
                // include normal fail case
                req_log.variable("result", result);
                req_log.ok();
                res.json(result);
            },
            fail: (err) => {
                // internal error (not normal fail)
                req_log.error(err);
                res.status(500);
                res.end(err.message);
            }
        });
    });

    exp_app.post("/library/storage-simple-coll/cache-collection-get", (req, res) => {
        const input = req.body;
        const req_log = log.sub("post.library.storage-simple-coll.cache-collection-get");
        handle_rpc_cache_collection_get(req_log, input, {
            invalid_input: (err) => {
                // bad request
                req_log.error(err);
                res.status(400);
                res.end(err.message);
            },
            ok: (result) => {
                // include normal fail case
                req_log.variable("result", result);
                req_log.ok();
                res.json(result);
            },
            fail: (err) => {
                // internal error (not normal fail)
                req_log.error(err);
                res.status(500);
                res.end(err.message);
            }
        });
    });

    exp_app.post("/library/storage-simple-coll/cache-collection-set", (req, res) => {
        const input = req.body;
        const req_log = log.sub("post.library.storage-simple-coll.cache-collection-set");
        handle_rpc_cache_collection_set(req_log, input, {
            invalid_input: (err) => {
                // bad request
                req_log.error(err);
                res.status(400);
                res.end(err.message);
            },
            ok: (result) => {
                // include normal fail case
                req_log.variable("result", result);
                req_log.ok();
                res.json(result);
            },
            fail: (err) => {
                // internal error (not normal fail)
                req_log.error(err);
                res.status(500);
                res.end(err.message);
            }
        });
    });

    exp_app.post("/library/storage-simple-coll/queue-collection-all-load", (req, res) => {
        const input = req.body;
        const req_log = log.sub("post.library.storage-simple-coll.queue-collection-all-load");
        handle_rpc_queue_collection_all_load(req_log, input, {
            invalid_input: (err) => {
                // bad request
                req_log.error(err);
                res.status(400);
                res.end(err.message);
            },
            ok: (result) => {
                // include normal fail case
                req_log.variable("result", result);
                req_log.ok();
                res.json(result);
            },
            fail: (err) => {
                // internal error (not normal fail)
                req_log.error(err);
                res.status(500);
                res.end(err.message);
            }
        });
    });

    exp_app.post("/library/storage-simple-coll/queue-collection-load", (req, res) => {
        const input = req.body;
        const req_log = log.sub("post.library.storage-simple-coll.queue-collection-load");
        handle_rpc_queue_collection_load(req_log, input, {
            invalid_input: (err) => {
                // bad request
                req_log.error(err);
                res.status(400);
                res.end(err.message);
            },
            ok: (result) => {
                // include normal fail case
                req_log.variable("result", result);
                req_log.ok();
                res.json(result);
            },
            fail: (err) => {
                // internal error (not normal fail)
                req_log.error(err);
                res.status(500);
                res.end(err.message);
            }
        });
    });

    exp_app.post("/library/storage-simple-coll/queue-collection-save", (req, res) => {
        const input = req.body;
        const req_log = log.sub("post.library.storage-simple-coll.queue-collection-save");
        handle_rpc_queue_collection_save(req_log, input, {
            invalid_input: (err) => {
                // bad request
                req_log.error(err);
                res.status(400);
                res.end(err.message);
            },
            ok: (result) => {
                // include normal fail case
                req_log.variable("result", result);
                req_log.ok();
                res.json(result);
            },
            fail: (err) => {
                // internal error (not normal fail)
                req_log.error(err);
                res.status(500);
                res.end(err.message);
            }
        });
    });

    exp_app.post("/library/storage-simple-coll/collection-get", (req, res) => {
        const input = req.body;
        const req_log = log.sub("post.library.storage-simple-coll.collection-get");
        handle_rpc_collection_get(req_log, input, {
            invalid_input: (err) => {
                // bad request
                req_log.error(err);
                res.status(400);
                res.end(err.message);
            },
            ok: (result) => {
                // include normal fail case
                req_log.variable("result", result);
                req_log.ok();
                res.json(result);
            },
            fail: (err) => {
                // internal error (not normal fail)
                req_log.error(err);
                res.status(500);
                res.end(err.message);
            }
        });
    });

    exp_app.post("/library/storage-simple-coll/collection-get-one", (req, res) => {
        const input = req.body;
        const req_log = log.sub("post.library.storage-simple-coll.collection-get-one");
        handle_rpc_collection_get_one(req_log, input, {
            invalid_input: (err) => {
                // bad request
                req_log.error(err);
                res.status(400);
                res.end(err.message);
            },
            ok: (result) => {
                // include normal fail case
                req_log.variable("result", result);
                req_log.ok();
                res.json(result);
            },
            fail: (err) => {
                // internal error (not normal fail)
                req_log.error(err);
                res.status(500);
                res.end(err.message);
            }
        });
    });

    exp_app.post("/library/storage-simple-coll/collection-item-add", (req, res) => {
        const input = req.body;
        const req_log = log.sub("post.library.storage-simple-coll.collection-item-add");
        handle_rpc_collection_item_add(req_log, input, {
            invalid_input: (err) => {
                // bad request
                req_log.error(err);
                res.status(400);
                res.end(err.message);
            },
            ok: (result) => {
                // include normal fail case
                req_log.variable("result", result);
                req_log.ok();
                res.json(result);
            },
            fail: (err) => {
                // internal error (not normal fail)
                req_log.error(err);
                res.status(500);
                res.end(err.message);
            }
        });
    });

    exp_app.post("/library/storage-simple-coll/collection-item-del", (req, res) => {
        const input = req.body;
        const req_log = log.sub("post.library.storage-simple-coll.collection-item-del");
        handle_rpc_collection_item_del(req_log, input, {
            invalid_input: (err) => {
                // bad request
                req_log.error(err);
                res.status(400);
                res.end(err.message);
            },
            ok: (result) => {
                // include normal fail case
                req_log.variable("result", result);
                req_log.ok();
                res.json(result);
            },
            fail: (err) => {
                // internal error (not normal fail)
                req_log.error(err);
                res.status(500);
                res.end(err.message);
            }
        });
    });
}
