// auto generated by dev/system
import express from "express";
import { Logger } from "../../../myutils/logger.js";
import * as http from "node:http";
import * as https from "node:https";

export function attach_proxy_handler(plog: Logger, opt: { exp_app: express.Express }) {
    const log = plog.sub("server.attach_proxy_handler");
    const { exp_app } = opt;
    exp_app.get("/_proxy_/", (req, res) => {
        const query_url = req.query.url;
        log.variable("query_url", query_url);
        if (!query_url) {
            res.statusCode = 400; // bad request
            res.end("url is required");
            return;
        }
        if (Array.isArray(query_url)) {
            res.statusCode = 400; // bad request
            res.end("url must not be array");
            return;
        }
        if (typeof query_url !== "string") {
            res.statusCode = 400; // bad request
            res.end("url must be string");
            return;
        }

        const url = new URL(query_url);
        log.variable("url", url);

        if (url.protocol !== "http:" && url.protocol !== "https:") {
            res.statusCode = 400; // bad request
            res.end("url protocol must be http or https");
            return;
        }

        if (!url.hostname) {
            res.statusCode = 400; // bad request
            res.end("url hostname must not be empty");
            return;
        }

        // ok, fetch and pipe
        if (url.protocol === "http:") {
            http.get(query_url, (proxy_res) => {
                proxy_res.pipe(res);
            }).once("error", (err) => {
                log.error(err);
                res.statusCode = 502; // bad gateway
                res.end(err.message);
            });
        } else if (url.protocol === "https:") {
            https
                .get(query_url, (proxy_res) => {
                    proxy_res.pipe(res);
                })
                .once("error", (err) => {
                    log.error(err);
                    res.statusCode = 502; // bad gateway
                    res.end(err.message);
                });
        } else {
            res.statusCode = 400;
            res.end("unknown error");
            return;
        }
    });
}
