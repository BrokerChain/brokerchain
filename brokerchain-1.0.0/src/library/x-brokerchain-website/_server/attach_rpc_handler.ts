// auto generated by dev/system
import express from "express";
import { Logger } from "../../../myutils/logger.js";
import { handle_rpc_run } from "../run/rpc/handle.js";
import { handle_rpc_run_dev } from "../run-dev/rpc/handle.js";
import { handle_rpc_run_public } from "../run-public/rpc/handle.js";
import { handle_rpc_build } from "../build/rpc/handle.js";
import { handle_rpc_watch } from "../watch/rpc/handle.js";
import { handle_rpc_make_page_index } from "../make-page-index/rpc/handle.js";
import { handle_rpc_build_page_index } from "../build-page-index/rpc/handle.js";
import { handle_rpc_watch_page_index } from "../watch-page-index/rpc/handle.js";

export function attach_rpc_handler(plog: Logger, opt: { exp_app: express.Express }) {
    const log = plog.sub("server.attach_rpc_handler");
    const { exp_app } = opt;

    exp_app.post("/library/x-brokerchain-website/run", (req, res) => {
        const input = req.body;
        const req_log = log.sub("post.library.x-brokerchain-website.run");
        handle_rpc_run(req_log, input, {
            invalid_input: (err) => {
                // bad request
                req_log.error(err);
                res.status(400);
                res.end(err.message);
            },
            ok: (result) => {
                // include normal fail case
                req_log.variable("result", result);
                req_log.ok();
                res.json(result);
            },
            fail: (err) => {
                // internal error (not normal fail)
                req_log.error(err);
                res.status(500);
                res.end(err.message);
            }
        });
    });

    exp_app.post("/library/x-brokerchain-website/run-dev", (req, res) => {
        const input = req.body;
        const req_log = log.sub("post.library.x-brokerchain-website.run-dev");
        handle_rpc_run_dev(req_log, input, {
            invalid_input: (err) => {
                // bad request
                req_log.error(err);
                res.status(400);
                res.end(err.message);
            },
            ok: (result) => {
                // include normal fail case
                req_log.variable("result", result);
                req_log.ok();
                res.json(result);
            },
            fail: (err) => {
                // internal error (not normal fail)
                req_log.error(err);
                res.status(500);
                res.end(err.message);
            }
        });
    });

    exp_app.post("/library/x-brokerchain-website/run-public", (req, res) => {
        const input = req.body;
        const req_log = log.sub("post.library.x-brokerchain-website.run-public");
        handle_rpc_run_public(req_log, input, {
            invalid_input: (err) => {
                // bad request
                req_log.error(err);
                res.status(400);
                res.end(err.message);
            },
            ok: (result) => {
                // include normal fail case
                req_log.variable("result", result);
                req_log.ok();
                res.json(result);
            },
            fail: (err) => {
                // internal error (not normal fail)
                req_log.error(err);
                res.status(500);
                res.end(err.message);
            }
        });
    });

    exp_app.post("/library/x-brokerchain-website/build", (req, res) => {
        const input = req.body;
        const req_log = log.sub("post.library.x-brokerchain-website.build");
        handle_rpc_build(req_log, input, {
            invalid_input: (err) => {
                // bad request
                req_log.error(err);
                res.status(400);
                res.end(err.message);
            },
            ok: (result) => {
                // include normal fail case
                req_log.variable("result", result);
                req_log.ok();
                res.json(result);
            },
            fail: (err) => {
                // internal error (not normal fail)
                req_log.error(err);
                res.status(500);
                res.end(err.message);
            }
        });
    });

    exp_app.post("/library/x-brokerchain-website/watch", (req, res) => {
        const input = req.body;
        const req_log = log.sub("post.library.x-brokerchain-website.watch");
        handle_rpc_watch(req_log, input, {
            invalid_input: (err) => {
                // bad request
                req_log.error(err);
                res.status(400);
                res.end(err.message);
            },
            ok: (result) => {
                // include normal fail case
                req_log.variable("result", result);
                req_log.ok();
                res.json(result);
            },
            fail: (err) => {
                // internal error (not normal fail)
                req_log.error(err);
                res.status(500);
                res.end(err.message);
            }
        });
    });

    exp_app.post("/library/x-brokerchain-website/make-page-index", (req, res) => {
        const input = req.body;
        const req_log = log.sub("post.library.x-brokerchain-website.make-page-index");
        handle_rpc_make_page_index(req_log, input, {
            invalid_input: (err) => {
                // bad request
                req_log.error(err);
                res.status(400);
                res.end(err.message);
            },
            ok: (result) => {
                // include normal fail case
                req_log.variable("result", result);
                req_log.ok();
                res.json(result);
            },
            fail: (err) => {
                // internal error (not normal fail)
                req_log.error(err);
                res.status(500);
                res.end(err.message);
            }
        });
    });

    exp_app.post("/library/x-brokerchain-website/build-page-index", (req, res) => {
        const input = req.body;
        const req_log = log.sub("post.library.x-brokerchain-website.build-page-index");
        handle_rpc_build_page_index(req_log, input, {
            invalid_input: (err) => {
                // bad request
                req_log.error(err);
                res.status(400);
                res.end(err.message);
            },
            ok: (result) => {
                // include normal fail case
                req_log.variable("result", result);
                req_log.ok();
                res.json(result);
            },
            fail: (err) => {
                // internal error (not normal fail)
                req_log.error(err);
                res.status(500);
                res.end(err.message);
            }
        });
    });

    exp_app.post("/library/x-brokerchain-website/watch-page-index", (req, res) => {
        const input = req.body;
        const req_log = log.sub("post.library.x-brokerchain-website.watch-page-index");
        handle_rpc_watch_page_index(req_log, input, {
            invalid_input: (err) => {
                // bad request
                req_log.error(err);
                res.status(400);
                res.end(err.message);
            },
            ok: (result) => {
                // include normal fail case
                req_log.variable("result", result);
                req_log.ok();
                res.json(result);
            },
            fail: (err) => {
                // internal error (not normal fail)
                req_log.error(err);
                res.status(500);
                res.end(err.message);
            }
        });
    });
}
