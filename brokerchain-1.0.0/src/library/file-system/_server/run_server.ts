// auto generated by dev/system
import * as http from "node:http";
import * as https from "node:https";
import express from "express";
import { Logger } from "../../../myutils/logger.js";
import { load_server_cert } from "./load_server_cert.js";

export function run_server(plog: Logger, opt: { exp_app: express.Express; host: string; http_port: number; https_port: number }) {
    const log = plog.sub("server.run_server");
    const { exp_app } = opt;
    const http_server = http.createServer(exp_app);
    const https_server = https.createServer(
        {
            SNICallback: (domain, cb) => {
                load_server_cert(log, domain, {
                    ok: (ctx) => {
                        cb(null, ctx);
                    },
                    fail: (err) => {
                        cb(err, null);
                    }
                });
            }
        },
        exp_app
    );

    http_server.on("error", (err) => {
        log.sub("http_server").error(err);
    });

    https_server.on("error", (err) => {
        log.sub("https_server").error(err);
    });

    http_server.listen(opt.http_port, opt.host);
    https_server.listen(opt.https_port, opt.host);

    log.println(`http://${opt.host}:${opt.http_port}`);
    log.println(`https://${opt.host}${opt.https_port ? ":" + opt.https_port : ""}`);
}
