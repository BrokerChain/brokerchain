// auto generated by dev/system

import { Logger } from "../../../myutils/logger.js";
import { Input, Output, Callback } from "./type.js";
import * as store from "../_/node/index.js";

export async function core<R>(plog: Logger, input: Input, cb: Callback<R>): Promise<R> {
    const log = plog.sub("x-brokerchain-store.node-del");
    log.variable("input", input);

    try {
        const node = await store.get(log, input.id, {
            none: async () => {
                throw log.new_error("not found");
            },
            ok: async (node) => {
                return node;
            },
            fail: async (err) => {
                throw err;
            }
        });

        // remove all relations from others

        // remove all relations to others

        // ok, remove the entity

        await store.del(log, node.id, {
            none: () => {
                throw log.new_error("unexpected not found");
            },
            ok: () => {
                // ignore
            },
            fail: (err) => {
                throw err;
            }
        });

        return cb.ok({});
    } catch (err) {
        return cb.fail(err);
    }
}
